// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter_app_shop/home/model/home_entity.dart';
import 'package:flutter_app_shop/generated/json/home_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case HomeEntity:
			return homeEntityFromJson(data as HomeEntity, json) as T;			case HomeData:
			return homeDataFromJson(data as HomeData, json) as T;			case HomeDataClas:
			return homeDataClasFromJson(data as HomeDataClas, json) as T;			case HomeDataBanner:
			return homeDataBannerFromJson(data as HomeDataBanner, json) as T;			case HomeDataShopList:
			return homeDataShopListFromJson(data as HomeDataShopList, json) as T;			case HomeDataShopListShopList:
			return homeDataShopListShopListFromJson(data as HomeDataShopListShopList, json) as T;			case HomeDataShopListShopListManystoretapsText:
			return homeDataShopListShopListManystoretapsTextFromJson(data as HomeDataShopListShopListManystoretapsText, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case HomeEntity:
			return homeEntityToJson(data as HomeEntity);			case HomeData:
			return homeDataToJson(data as HomeData);			case HomeDataClas:
			return homeDataClasToJson(data as HomeDataClas);			case HomeDataBanner:
			return homeDataBannerToJson(data as HomeDataBanner);			case HomeDataShopList:
			return homeDataShopListToJson(data as HomeDataShopList);			case HomeDataShopListShopList:
			return homeDataShopListShopListToJson(data as HomeDataShopListShopList);			case HomeDataShopListShopListManystoretapsText:
			return homeDataShopListShopListManystoretapsTextToJson(data as HomeDataShopListShopListManystoretapsText);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'HomeEntity':
			return HomeEntity().fromJson(json);			case 'HomeData':
			return HomeData().fromJson(json);			case 'HomeDataClas':
			return HomeDataClas().fromJson(json);			case 'HomeDataBanner':
			return HomeDataBanner().fromJson(json);			case 'HomeDataShopList':
			return HomeDataShopList().fromJson(json);			case 'HomeDataShopListShopList':
			return HomeDataShopListShopList().fromJson(json);			case 'HomeDataShopListShopListManystoretapsText':
			return HomeDataShopListShopListManystoretapsText().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'HomeEntity':
			return List<HomeEntity>();			case 'HomeData':
			return List<HomeData>();			case 'HomeDataClas':
			return List<HomeDataClas>();			case 'HomeDataBanner':
			return List<HomeDataBanner>();			case 'HomeDataShopList':
			return List<HomeDataShopList>();			case 'HomeDataShopListShopList':
			return List<HomeDataShopListShopList>();			case 'HomeDataShopListShopListManystoretapsText':
			return List<HomeDataShopListShopListManystoretapsText>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}