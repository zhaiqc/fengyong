// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter_app_shop/login/model/login_entity.dart';
import 'package:flutter_app_shop/generated/json/login_entity_helper.dart';
import 'package:flutter_app_shop/detail/article_list_entity.dart';
import 'package:flutter_app_shop/generated/json/article_list_entity_helper.dart';
import 'package:flutter_app_shop/article/model/upload_entity.dart';
import 'package:flutter_app_shop/generated/json/upload_entity_helper.dart';
import 'package:flutter_app_shop/home/model/home_entity.dart';
import 'package:flutter_app_shop/generated/json/home_entity_helper.dart';
import 'package:flutter_app_shop/home/shop/model/shop_list_entity.dart';
import 'package:flutter_app_shop/generated/json/shop_list_entity_helper.dart';
import 'package:flutter_app_shop/login/model/code_entity.dart';
import 'package:flutter_app_shop/generated/json/code_entity_helper.dart';
import 'package:flutter_app_shop/home/model/shop_entity.dart';
import 'package:flutter_app_shop/generated/json/shop_entity_helper.dart';
import 'package:flutter_app_shop/detail/creat_order_entity.dart';
import 'package:flutter_app_shop/generated/json/creat_order_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case LoginEntity:
			return loginEntityFromJson(data as LoginEntity, json) as T;			case LoginData:
			return loginDataFromJson(data as LoginData, json) as T;			case LoginDataUserinfo:
			return loginDataUserinfoFromJson(data as LoginDataUserinfo, json) as T;			case ArticleListEntity:
			return articleListEntityFromJson(data as ArticleListEntity, json) as T;			case ArticleListData:
			return articleListDataFromJson(data as ArticleListData, json) as T;			case UploadEntity:
			return uploadEntityFromJson(data as UploadEntity, json) as T;			case UploadData:
			return uploadDataFromJson(data as UploadData, json) as T;			case HomeEntity:
			return homeEntityFromJson(data as HomeEntity, json) as T;			case HomeData:
			return homeDataFromJson(data as HomeData, json) as T;			case HomeDataClas:
			return homeDataClasFromJson(data as HomeDataClas, json) as T;			case HomeDataBanner:
			return homeDataBannerFromJson(data as HomeDataBanner, json) as T;			case HomeDataShopList:
			return homeDataShopListFromJson(data as HomeDataShopList, json) as T;			case HomeDataShopListShopList:
			return homeDataShopListShopListFromJson(data as HomeDataShopListShopList, json) as T;			case HomeDataShopListShopListManystoretapsText:
			return homeDataShopListShopListManystoretapsTextFromJson(data as HomeDataShopListShopListManystoretapsText, json) as T;			case HomeDataArticle:
			return homeDataArticleFromJson(data as HomeDataArticle, json) as T;			case ShopListEntity:
			return shopListEntityFromJson(data as ShopListEntity, json) as T;			case ShopListData:
			return shopListDataFromJson(data as ShopListData, json) as T;			case ShopListDataManystoretapsText:
			return shopListDataManystoretapsTextFromJson(data as ShopListDataManystoretapsText, json) as T;			case CodeEntity:
			return codeEntityFromJson(data as CodeEntity, json) as T;			case ShopEntity:
			return shopEntityFromJson(data as ShopEntity, json) as T;			case ShopData:
			return shopDataFromJson(data as ShopData, json) as T;			case ShopDataSetmeal:
			return shopDataSetmealFromJson(data as ShopDataSetmeal, json) as T;			case ShopDataSetmealConfigjson:
			return shopDataSetmealConfigjsonFromJson(data as ShopDataSetmealConfigjson, json) as T;			case ShopDataManystoretap:
			return shopDataManystoretapFromJson(data as ShopDataManystoretap, json) as T;			case ShopDataManystore:
			return shopDataManystoreFromJson(data as ShopDataManystore, json) as T;			case CreatOrderEntity:
			return creatOrderEntityFromJson(data as CreatOrderEntity, json) as T;			case CreatOrderData:
			return creatOrderDataFromJson(data as CreatOrderData, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case LoginEntity:
			return loginEntityToJson(data as LoginEntity);			case LoginData:
			return loginDataToJson(data as LoginData);			case LoginDataUserinfo:
			return loginDataUserinfoToJson(data as LoginDataUserinfo);			case ArticleListEntity:
			return articleListEntityToJson(data as ArticleListEntity);			case ArticleListData:
			return articleListDataToJson(data as ArticleListData);			case UploadEntity:
			return uploadEntityToJson(data as UploadEntity);			case UploadData:
			return uploadDataToJson(data as UploadData);			case HomeEntity:
			return homeEntityToJson(data as HomeEntity);			case HomeData:
			return homeDataToJson(data as HomeData);			case HomeDataClas:
			return homeDataClasToJson(data as HomeDataClas);			case HomeDataBanner:
			return homeDataBannerToJson(data as HomeDataBanner);			case HomeDataShopList:
			return homeDataShopListToJson(data as HomeDataShopList);			case HomeDataShopListShopList:
			return homeDataShopListShopListToJson(data as HomeDataShopListShopList);			case HomeDataShopListShopListManystoretapsText:
			return homeDataShopListShopListManystoretapsTextToJson(data as HomeDataShopListShopListManystoretapsText);			case HomeDataArticle:
			return homeDataArticleToJson(data as HomeDataArticle);			case ShopListEntity:
			return shopListEntityToJson(data as ShopListEntity);			case ShopListData:
			return shopListDataToJson(data as ShopListData);			case ShopListDataManystoretapsText:
			return shopListDataManystoretapsTextToJson(data as ShopListDataManystoretapsText);			case CodeEntity:
			return codeEntityToJson(data as CodeEntity);			case ShopEntity:
			return shopEntityToJson(data as ShopEntity);			case ShopData:
			return shopDataToJson(data as ShopData);			case ShopDataSetmeal:
			return shopDataSetmealToJson(data as ShopDataSetmeal);			case ShopDataSetmealConfigjson:
			return shopDataSetmealConfigjsonToJson(data as ShopDataSetmealConfigjson);			case ShopDataManystoretap:
			return shopDataManystoretapToJson(data as ShopDataManystoretap);			case ShopDataManystore:
			return shopDataManystoreToJson(data as ShopDataManystore);			case CreatOrderEntity:
			return creatOrderEntityToJson(data as CreatOrderEntity);			case CreatOrderData:
			return creatOrderDataToJson(data as CreatOrderData);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'LoginEntity':
			return LoginEntity().fromJson(json);			case 'LoginData':
			return LoginData().fromJson(json);			case 'LoginDataUserinfo':
			return LoginDataUserinfo().fromJson(json);			case 'ArticleListEntity':
			return ArticleListEntity().fromJson(json);			case 'ArticleListData':
			return ArticleListData().fromJson(json);			case 'UploadEntity':
			return UploadEntity().fromJson(json);			case 'UploadData':
			return UploadData().fromJson(json);			case 'HomeEntity':
			return HomeEntity().fromJson(json);			case 'HomeData':
			return HomeData().fromJson(json);			case 'HomeDataClas':
			return HomeDataClas().fromJson(json);			case 'HomeDataBanner':
			return HomeDataBanner().fromJson(json);			case 'HomeDataShopList':
			return HomeDataShopList().fromJson(json);			case 'HomeDataShopListShopList':
			return HomeDataShopListShopList().fromJson(json);			case 'HomeDataShopListShopListManystoretapsText':
			return HomeDataShopListShopListManystoretapsText().fromJson(json);			case 'HomeDataArticle':
			return HomeDataArticle().fromJson(json);			case 'ShopListEntity':
			return ShopListEntity().fromJson(json);			case 'ShopListData':
			return ShopListData().fromJson(json);			case 'ShopListDataManystoretapsText':
			return ShopListDataManystoretapsText().fromJson(json);			case 'CodeEntity':
			return CodeEntity().fromJson(json);			case 'ShopEntity':
			return ShopEntity().fromJson(json);			case 'ShopData':
			return ShopData().fromJson(json);			case 'ShopDataSetmeal':
			return ShopDataSetmeal().fromJson(json);			case 'ShopDataSetmealConfigjson':
			return ShopDataSetmealConfigjson().fromJson(json);			case 'ShopDataManystoretap':
			return ShopDataManystoretap().fromJson(json);			case 'ShopDataManystore':
			return ShopDataManystore().fromJson(json);			case 'CreatOrderEntity':
			return CreatOrderEntity().fromJson(json);			case 'CreatOrderData':
			return CreatOrderData().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'LoginEntity':
			return List<LoginEntity>();			case 'LoginData':
			return List<LoginData>();			case 'LoginDataUserinfo':
			return List<LoginDataUserinfo>();			case 'ArticleListEntity':
			return List<ArticleListEntity>();			case 'ArticleListData':
			return List<ArticleListData>();			case 'UploadEntity':
			return List<UploadEntity>();			case 'UploadData':
			return List<UploadData>();			case 'HomeEntity':
			return List<HomeEntity>();			case 'HomeData':
			return List<HomeData>();			case 'HomeDataClas':
			return List<HomeDataClas>();			case 'HomeDataBanner':
			return List<HomeDataBanner>();			case 'HomeDataShopList':
			return List<HomeDataShopList>();			case 'HomeDataShopListShopList':
			return List<HomeDataShopListShopList>();			case 'HomeDataShopListShopListManystoretapsText':
			return List<HomeDataShopListShopListManystoretapsText>();			case 'HomeDataArticle':
			return List<HomeDataArticle>();			case 'ShopListEntity':
			return List<ShopListEntity>();			case 'ShopListData':
			return List<ShopListData>();			case 'ShopListDataManystoretapsText':
			return List<ShopListDataManystoretapsText>();			case 'CodeEntity':
			return List<CodeEntity>();			case 'ShopEntity':
			return List<ShopEntity>();			case 'ShopData':
			return List<ShopData>();			case 'ShopDataSetmeal':
			return List<ShopDataSetmeal>();			case 'ShopDataSetmealConfigjson':
			return List<ShopDataSetmealConfigjson>();			case 'ShopDataManystoretap':
			return List<ShopDataManystoretap>();			case 'ShopDataManystore':
			return List<ShopDataManystore>();			case 'CreatOrderEntity':
			return List<CreatOrderEntity>();			case 'CreatOrderData':
			return List<CreatOrderData>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}